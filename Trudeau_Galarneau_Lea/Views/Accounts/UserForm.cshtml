@*@model MDB.Models.User
    @{
        string pageTitle = Model.Id == 0 ? "Subscribe" : "Profil";
        string button = Model.Id == 0 ? "S'inscrire" : "Modifier";
    }
    <div class="main">
        @using (Html.BeginForm())
        {
            @Html.HiddenFor(m => m.CreationDate)
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.Blocked)
            @Html.HiddenFor(m => m.Verified)
            @Html.HiddenFor(m => m.UserTypeId)
            @Html.AntiForgeryToken()
            <h3>@pageTitle</h3>
            <hr />
            <div class="form-horizontal">
                <fieldset class="formField">
                    <div class="legend">Identification</div>
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Prenom" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger", placeholder = "Nom" })
                    <br />
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nom" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </fieldset>

                <div class="legend">Avatar</div>
                @Helper.ImageUploader(Model.Id, "AvatarImageData", Model.GetAvatarURL(), "~/Images_Data/Loading_icon.gif", "Cliquez pour choisir une image")
                @Html.ValidationMessageFor(model => model.AvatarImageData, "", new { @class = "text-danger" })

                <fieldset class="formField">
                    <div class="legend">Genre</div>
                    @Helper.ListToRadioButtonGroup("GenderId", ViewBag.Genders, ViewBag.Gender)
                    @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                </fieldset>

                <fieldset class="formField">
                    <div class="legend">Courriel</div>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Courriel" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    <br />
                    @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirmer courriel" } })
                    @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
                </fieldset>

                <fieldset class="formField">
                    <div class="legend">
                        @Html.DisplayNameFor(model => model.Password)
                    </div>
                    <div>
                        @if (Model.Id != 0)
                        {
                            <label for="changePassword">Modifier</label>
                            <input type="checkbox" name="changePassword" id="changePassword" style="margin-top:-5px;" />
                        }
                    </div>

                    <div style="display:grid; grid-template-columns:auto 0px">


                        @Html.EditorFor(model => model.Password, new
                   {
                       htmlAttributes = new { @class = "form-control text-box single-line password", placeholder = @Html.DisplayNameFor(model => model.Password) }})
                        @Helper.Icon("toggleShowPassword", "fa-eye-slash", "Afficher le mot de passe")
                    </div>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    <br />
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control text-box single-line password", placeholder = @Html.DisplayNameFor(model => model.ConfirmPassword) } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </fieldset>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value=@button class="btn btn-default" spellcheck="false" />
                    </div>
                </div>
            </div>
        }
    </div>*@

@model MDB.Models.User
@{
    string pageTitle = Model.Id == 0 ? "Inscription" : "Profil";
    string btnValue = "";
    if (pageTitle == "Profil")
    {
        btnValue = "Modifier";
    }
    else
    {
        btnValue = "S'inscrire";
    }
}
@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.CreationDate)
    @Html.HiddenFor(m => m.Blocked)
    @Html.HiddenFor(m => m.Verified)
    @Html.HiddenFor(m => m.UserTypeId)
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.Avatar)
    @Html.AntiForgeryToken()
    <h3>@pageTitle</h3>
    <hr />
    <div class="form-horizontal">
        <fieldset class="formField">
            <div class="legend">Identification</div>
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.FirstName) } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            <br />
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.LastName) } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </fieldset>

        <div class="legend">Avatar</div>
        @Helper.ImageUploader(Model.Id, "AvatarImageData", Model.GetAvatarURL(), "~/Images_Data/Loading_icon.gif", "Cliquez pour choisir votre avatar")
        @Html.ValidationMessageFor(model => model.AvatarImageData, "", new { @class = "text-danger" })

        <fieldset class="formField">
            <div class="legend">Genre</div>

            @Helper.ListToRadioButtonGroup("GenderId", ViewBag.Genders, Model.GenderId)
            @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
        </fieldset>

        <fieldset class="formField">
            <div class="legend">Courriel</div>
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.Email) } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            <br />
            @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control", placeholder = @Html.DisplayNameFor(model => model.ConfirmEmail) } })
            @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
        </fieldset>

        <fieldset class="formField">
            <div class="legend">
                @Html.DisplayNameFor(model => model.Password)
                <div style="float:right">
                    @if (@Model.Id != 0)
                    {
                        <label for="changePassword">Modifier</label>
                        <input type="checkbox" name="changePassword" id="changePassword" style="margin-top:-5px;" />
                    }
                </div>
            </div>
            <div style="display:grid; grid-template-columns:auto 0px">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control text-box single-line password", placeholder = @Html.DisplayNameFor(model => model.Password) } })
                @Helper.Icon("toggleShowPassword", "fa-eye-slash", "Affichier le mot de passe")
            </div>
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            <br />
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control text-box single-line password", placeholder = @Html.DisplayNameFor(model => model.ConfirmPassword) } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </fieldset>
        <input type="submit" value="@btnValue" class="btn btn-default" spellcheck="false" />
    </div>
}
